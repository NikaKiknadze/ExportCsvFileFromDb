CREATE VIEW ExcelView AS
SELECT 
    CAST('TEST1' AS sql_variant) AS [Id], 
    CAST('TEST2' AS sql_variant) AS [Name], 
    CAST('TEST3' AS sql_variant) AS [SurName], 
    CAST('TEST4' AS sql_variant) AS [Age], 
    CAST('TEST5' AS sql_variant) AS [FacultyId]
UNION ALL
SELECT 
    [Id], 
    [Name], 
    [SurName], 
    [Age], 
    CAST([FacultyId] AS sql_variant)
FROM University.Users;


CREATE PROCEDURE ExportDataToCSV
    @outputFile NVARCHAR(500) = 'C:\Users\kikna\Desktop\Test\Te.xlsx'
AS
BEGIN
    DECLARE @cmdAppendData NVARCHAR(1000)
    DECLARE @bcpCommand NVARCHAR(2000)

    -- Construct the BCP command
    SET @bcpCommand = 'bcp "SELECT * FROM ExcelView" queryout "' + @outputFile + '" -c -t, -T -S localhost\SQLEXPRESS -d University -F 1 -a 16384'

    -- Execute the BCP command
    EXEC xp_cmdshell @bcpCommand
END





static void Main()
{
    string connectionString = "Server=localhost\\SQLEXPRESS;Database=University;Integrated Security=True;";

    // Call the stored procedure to generate the CSV file
    GenerateCSV(connectionString);

    // Find and read the generated CSV file
    string csvFilePath = @"C:\Users\kikna\Desktop\Test\Te.csv";
    byte[] csvBytes = File.ReadAllBytes(csvFilePath);

    // Save the byte array to disk
    SaveByteArrayToFile(csvBytes, @"C:\Users\kikna\Desktop\Test\Te_saved.csv");

    Console.WriteLine("File saved successfully.");
}

static void GenerateCSV(string connectionString)
{
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        SqlCommand command = new SqlCommand("ExportDataToCSV", connection);
        command.CommandType = System.Data.CommandType.StoredProcedure;

        try
        {
            connection.Open();
            command.ExecuteNonQuery();
            Console.WriteLine("Export successful.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error exporting data: " + ex.Message);
        }
    }
}

static void SaveByteArrayToFile(byte[] byteArray, string filePath)
{
    using (FileStream fs = new FileStream(filePath, FileMode.Create, FileAccess.Write))
    {
        fs.Write(byteArray, 0, byteArray.Length);
    }
}
